{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMXCOdwf76CjYBrM/TCZ32J",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/wl4713/big-short/blob/main/sk%ED%95%98%EC%9D%B4%EB%8B%89%EC%8A%A4\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r9Ziv4PPEbdn",
        "outputId": "a98a8b15-3459-4b52-8f47-e7e0a78fb43d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: Finance-DataReader in /usr/local/lib/python3.10/dist-packages (0.9.90)\n",
            "Requirement already satisfied: pandas>=0.19.2 in /usr/local/lib/python3.10/dist-packages (from Finance-DataReader) (2.0.3)\n",
            "Requirement already satisfied: requests>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from Finance-DataReader) (2.31.0)\n",
            "Requirement already satisfied: requests-file in /usr/local/lib/python3.10/dist-packages (from Finance-DataReader) (2.1.0)\n",
            "Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (from Finance-DataReader) (4.9.4)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from Finance-DataReader) (4.66.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19.2->Finance-DataReader) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19.2->Finance-DataReader) (2023.4)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19.2->Finance-DataReader) (2024.1)\n",
            "Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.19.2->Finance-DataReader) (1.25.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.3.0->Finance-DataReader) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.3.0->Finance-DataReader) (3.7)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.3.0->Finance-DataReader) (2.0.7)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.3.0->Finance-DataReader) (2024.6.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas>=0.19.2->Finance-DataReader) (1.16.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install Finance-DataReader"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import FinanceDataReader as fdr"
      ],
      "metadata": {
        "id": "xjuS6nRdE4_E"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "krx = fdr.StockListing('KRX')"
      ],
      "metadata": {
        "id": "TFlFAAZfE5CI"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "krx.head()"
      ],
      "metadata": {
        "id": "XxV5RHNBE5FL",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "e7b56017-1c70-4ee3-edd3-e82ec15e1534"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Code        ISU_CD      Name Market Dept   Close ChangeCode  Changes  \\\n",
              "0  005930  KR7005930003      삼성전자  KOSPI        81800          3        0   \n",
              "1  000660  KR7000660001    SK하이닉스  KOSPI       236000          1     4000   \n",
              "2  373220  KR7373220003  LG에너지솔루션  KOSPI       358000          1    14500   \n",
              "3  005380  KR7005380001       현대차  KOSPI       276000          1     3500   \n",
              "4  207940  KR7207940008  삼성바이오로직스  KOSPI       810000          3        0   \n",
              "\n",
              "   ChagesRatio    Open    High     Low    Volume        Amount  \\\n",
              "0         0.00   82300   82300   81000  11440328  933802003100   \n",
              "1         1.72  231000  236000  225000   3315677  765077936994   \n",
              "2         4.22  360000  369500  353000    714015  258132310500   \n",
              "3         1.28  275000  281500  272500   1072157  296157158500   \n",
              "4         0.00  805000  818000  792000    156413  125886283000   \n",
              "\n",
              "            Marcap      Stocks MarketId  \n",
              "0  488328212590000  5969782550      STK  \n",
              "1  171808558140000   728002365      STK  \n",
              "2   83772000000000   234000000      STK  \n",
              "3   57798868716000   209416191      STK  \n",
              "4   57650940000000    71174000      STK  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-43bf256a-5be8-4f8c-8fde-e4b97d8e3cba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Code</th>\n",
              "      <th>ISU_CD</th>\n",
              "      <th>Name</th>\n",
              "      <th>Market</th>\n",
              "      <th>Dept</th>\n",
              "      <th>Close</th>\n",
              "      <th>ChangeCode</th>\n",
              "      <th>Changes</th>\n",
              "      <th>ChagesRatio</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Amount</th>\n",
              "      <th>Marcap</th>\n",
              "      <th>Stocks</th>\n",
              "      <th>MarketId</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>005930</td>\n",
              "      <td>KR7005930003</td>\n",
              "      <td>삼성전자</td>\n",
              "      <td>KOSPI</td>\n",
              "      <td></td>\n",
              "      <td>81800</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>82300</td>\n",
              "      <td>82300</td>\n",
              "      <td>81000</td>\n",
              "      <td>11440328</td>\n",
              "      <td>933802003100</td>\n",
              "      <td>488328212590000</td>\n",
              "      <td>5969782550</td>\n",
              "      <td>STK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>000660</td>\n",
              "      <td>KR7000660001</td>\n",
              "      <td>SK하이닉스</td>\n",
              "      <td>KOSPI</td>\n",
              "      <td></td>\n",
              "      <td>236000</td>\n",
              "      <td>1</td>\n",
              "      <td>4000</td>\n",
              "      <td>1.72</td>\n",
              "      <td>231000</td>\n",
              "      <td>236000</td>\n",
              "      <td>225000</td>\n",
              "      <td>3315677</td>\n",
              "      <td>765077936994</td>\n",
              "      <td>171808558140000</td>\n",
              "      <td>728002365</td>\n",
              "      <td>STK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>373220</td>\n",
              "      <td>KR7373220003</td>\n",
              "      <td>LG에너지솔루션</td>\n",
              "      <td>KOSPI</td>\n",
              "      <td></td>\n",
              "      <td>358000</td>\n",
              "      <td>1</td>\n",
              "      <td>14500</td>\n",
              "      <td>4.22</td>\n",
              "      <td>360000</td>\n",
              "      <td>369500</td>\n",
              "      <td>353000</td>\n",
              "      <td>714015</td>\n",
              "      <td>258132310500</td>\n",
              "      <td>83772000000000</td>\n",
              "      <td>234000000</td>\n",
              "      <td>STK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>005380</td>\n",
              "      <td>KR7005380001</td>\n",
              "      <td>현대차</td>\n",
              "      <td>KOSPI</td>\n",
              "      <td></td>\n",
              "      <td>276000</td>\n",
              "      <td>1</td>\n",
              "      <td>3500</td>\n",
              "      <td>1.28</td>\n",
              "      <td>275000</td>\n",
              "      <td>281500</td>\n",
              "      <td>272500</td>\n",
              "      <td>1072157</td>\n",
              "      <td>296157158500</td>\n",
              "      <td>57798868716000</td>\n",
              "      <td>209416191</td>\n",
              "      <td>STK</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>207940</td>\n",
              "      <td>KR7207940008</td>\n",
              "      <td>삼성바이오로직스</td>\n",
              "      <td>KOSPI</td>\n",
              "      <td></td>\n",
              "      <td>810000</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>805000</td>\n",
              "      <td>818000</td>\n",
              "      <td>792000</td>\n",
              "      <td>156413</td>\n",
              "      <td>125886283000</td>\n",
              "      <td>57650940000000</td>\n",
              "      <td>71174000</td>\n",
              "      <td>STK</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43bf256a-5be8-4f8c-8fde-e4b97d8e3cba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-43bf256a-5be8-4f8c-8fde-e4b97d8e3cba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-43bf256a-5be8-4f8c-8fde-e4b97d8e3cba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1cf6e8c1-325c-4247-b2c3-32a992e23eff\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1cf6e8c1-325c-4247-b2c3-32a992e23eff')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1cf6e8c1-325c-4247-b2c3-32a992e23eff button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "krx",
              "summary": "{\n  \"name\": \"krx\",\n  \"rows\": 2819,\n  \"fields\": [\n    {\n      \"column\": \"Code\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2819,\n        \"samples\": [\n          \"123330\",\n          \"071090\",\n          \"407400\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ISU_CD\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2819,\n        \"samples\": [\n          \"KR7123330003\",\n          \"KR7071090005\",\n          \"KR7407400001\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2819,\n        \"samples\": [\n          \"\\uc81c\\ub2c9\",\n          \"\\ud558\\uc774\\uc2a4\\ud2f8\",\n          \"\\uafc8\\ube44\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Market\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"KOSDAQ GLOBAL\",\n          \"KONEX\",\n          \"KOSPI\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dept\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"\\ud22c\\uc790\\uc8fc\\uc758\\ud658\\uae30\\uc885\\ubaa9(\\uc18c\\uc18d\\ubd80\\uc5c6\\uc74c)\",\n          \"\\uc6b0\\ub7c9\\uae30\\uc5c5\\ubd80\",\n          \"\\uc678\\uad6d\\uae30\\uc5c5(\\uc18c\\uc18d\\ubd80\\uc5c6\\uc74c)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1970,\n        \"samples\": [\n          \"3950\",\n          \"11920\",\n          \"2980\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChangeCode\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"3\",\n          \"1\",\n          \"5\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Changes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1472,\n        \"min\": -39500,\n        \"max\": 20500,\n        \"num_unique_values\": 406,\n        \"samples\": [\n          20500,\n          -35,\n          -1110\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ChagesRatio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.2289812723162696,\n        \"min\": -29.91,\n        \"max\": 29.95,\n        \"num_unique_values\": 872,\n        \"samples\": [\n          -4.05,\n          10.76,\n          -1.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50478,\n        \"min\": 0,\n        \"max\": 805000,\n        \"num_unique_values\": 1869,\n        \"samples\": [\n          1073,\n          1120,\n          3490\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51266,\n        \"min\": 0,\n        \"max\": 818000,\n        \"num_unique_values\": 1902,\n        \"samples\": [\n          2360,\n          91600,\n          74500\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49276,\n        \"min\": 0,\n        \"max\": 792000,\n        \"num_unique_values\": 1902,\n        \"samples\": [\n          2855,\n          114600,\n          12740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1509512,\n        \"min\": 0,\n        \"max\": 25839575,\n        \"num_unique_values\": 2666,\n        \"samples\": [\n          87672,\n          33937,\n          295314\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39116349118,\n        \"min\": 0,\n        \"max\": 933802003100,\n        \"num_unique_values\": 2692,\n        \"samples\": [\n          10392730,\n          194215635,\n          970649400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marcap\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10329861665442,\n        \"min\": 796000000,\n        \"max\": 488328212590000,\n        \"num_unique_values\": 2818,\n        \"samples\": [\n          21700000000,\n          71695620000,\n          108741534380\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stocks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 133285395,\n        \"min\": 200000,\n        \"max\": 5969782550,\n        \"num_unique_values\": 2725,\n        \"samples\": [\n          60132868,\n          168391459,\n          53234000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MarketId\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"STK\",\n          \"KSQ\",\n          \"KNX\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "krx[krx['Name']=='SK하이닉스']['Code']"
      ],
      "metadata": {
        "id": "Ns9aJyTiE5H4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e859a24e-bd4d-42fd-b8be-20d20aaf7fb5"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1    000660\n",
              "Name: Code, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df= fdr.DataReader('000660')\n",
        "df.head()"
      ],
      "metadata": {
        "id": "AR1iXOXmE5Kn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "outputId": "c9f88e52-362c-4418-db01-1b117fd3a77e"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Open    High     Low   Close   Volume    Change\n",
              "Date                                                         \n",
              "2000-03-13  398481  402407  366093  371000  7712000       NaN\n",
              "2000-03-14  378852  404370  372963  386703  7374010  0.042326\n",
              "2000-03-15  372963  410259  369037  403388  6626500  0.043147\n",
              "2000-03-16  418111  420074  387685  394555  5726020 -0.021897\n",
              "2000-03-17  406333  417130  402407  408296  5506430  0.034827"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-201686c8-7ed4-4b79-8e24-7c62c6bd502c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Change</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2000-03-13</th>\n",
              "      <td>398481</td>\n",
              "      <td>402407</td>\n",
              "      <td>366093</td>\n",
              "      <td>371000</td>\n",
              "      <td>7712000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-14</th>\n",
              "      <td>378852</td>\n",
              "      <td>404370</td>\n",
              "      <td>372963</td>\n",
              "      <td>386703</td>\n",
              "      <td>7374010</td>\n",
              "      <td>0.042326</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-15</th>\n",
              "      <td>372963</td>\n",
              "      <td>410259</td>\n",
              "      <td>369037</td>\n",
              "      <td>403388</td>\n",
              "      <td>6626500</td>\n",
              "      <td>0.043147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-16</th>\n",
              "      <td>418111</td>\n",
              "      <td>420074</td>\n",
              "      <td>387685</td>\n",
              "      <td>394555</td>\n",
              "      <td>5726020</td>\n",
              "      <td>-0.021897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-17</th>\n",
              "      <td>406333</td>\n",
              "      <td>417130</td>\n",
              "      <td>402407</td>\n",
              "      <td>408296</td>\n",
              "      <td>5506430</td>\n",
              "      <td>0.034827</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-201686c8-7ed4-4b79-8e24-7c62c6bd502c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-201686c8-7ed4-4b79-8e24-7c62c6bd502c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-201686c8-7ed4-4b79-8e24-7c62c6bd502c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-71a572cc-6be6-4501-beaf-3c4798d18006\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71a572cc-6be6-4501-beaf-3c4798d18006')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-71a572cc-6be6-4501-beaf-3c4798d18006 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 6000,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-03-13 00:00:00\",\n        \"max\": \"2024-07-03 00:00:00\",\n        \"num_unique_values\": 6000,\n        \"samples\": [\n          \"2007-06-05 00:00:00\",\n          \"2016-01-13 00:00:00\",\n          \"2001-02-13 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65990,\n        \"min\": 2650,\n        \"max\": 518222,\n        \"num_unique_values\": 2116,\n        \"samples\": [\n          71900,\n          51800,\n          30622\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67730,\n        \"min\": 2650,\n        \"max\": 539815,\n        \"num_unique_values\": 2165,\n        \"samples\": [\n          41800,\n          90300,\n          46150\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64243,\n        \"min\": 2454,\n        \"max\": 500556,\n        \"num_unique_values\": 2140,\n        \"samples\": [\n          67000,\n          61000,\n          46450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65840,\n        \"min\": 2650,\n        \"max\": 524111,\n        \"num_unique_values\": 2155,\n        \"samples\": [\n          49900,\n          106500,\n          23850\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114211236,\n        \"min\": 0,\n        \"max\": 1832794266,\n        \"num_unique_values\": 5988,\n        \"samples\": [\n          3074526,\n          2542590,\n          2715809\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Change\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03728119102672977,\n        \"min\": -0.1500169812236185,\n        \"max\": 0.1500917057265132,\n        \"num_unique_values\": 4879,\n        \"samples\": [\n          0.03552631578947363,\n          -0.040935672514619936,\n          -0.025574570786023765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=df.rename(columns={'High': '고가','Low': '저가','Close' : '종가','Volume':'거래량','Change': '변동률','Open':'시가'})\n",
        "df.head()"
      ],
      "metadata": {
        "id": "aOVukajNE5NW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "outputId": "46d00a36-bc92-4821-c2de-087372e98cd3"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                시가      고가      저가      종가      거래량       변동률\n",
              "Date                                                         \n",
              "2000-03-13  398481  402407  366093  371000  7712000       NaN\n",
              "2000-03-14  378852  404370  372963  386703  7374010  0.042326\n",
              "2000-03-15  372963  410259  369037  403388  6626500  0.043147\n",
              "2000-03-16  418111  420074  387685  394555  5726020 -0.021897\n",
              "2000-03-17  406333  417130  402407  408296  5506430  0.034827"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bc27c792-cd95-443e-9137-71cee02c9fac\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>시가</th>\n",
              "      <th>고가</th>\n",
              "      <th>저가</th>\n",
              "      <th>종가</th>\n",
              "      <th>거래량</th>\n",
              "      <th>변동률</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2000-03-13</th>\n",
              "      <td>398481</td>\n",
              "      <td>402407</td>\n",
              "      <td>366093</td>\n",
              "      <td>371000</td>\n",
              "      <td>7712000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-14</th>\n",
              "      <td>378852</td>\n",
              "      <td>404370</td>\n",
              "      <td>372963</td>\n",
              "      <td>386703</td>\n",
              "      <td>7374010</td>\n",
              "      <td>0.042326</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-15</th>\n",
              "      <td>372963</td>\n",
              "      <td>410259</td>\n",
              "      <td>369037</td>\n",
              "      <td>403388</td>\n",
              "      <td>6626500</td>\n",
              "      <td>0.043147</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-16</th>\n",
              "      <td>418111</td>\n",
              "      <td>420074</td>\n",
              "      <td>387685</td>\n",
              "      <td>394555</td>\n",
              "      <td>5726020</td>\n",
              "      <td>-0.021897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-17</th>\n",
              "      <td>406333</td>\n",
              "      <td>417130</td>\n",
              "      <td>402407</td>\n",
              "      <td>408296</td>\n",
              "      <td>5506430</td>\n",
              "      <td>0.034827</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc27c792-cd95-443e-9137-71cee02c9fac')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bc27c792-cd95-443e-9137-71cee02c9fac button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bc27c792-cd95-443e-9137-71cee02c9fac');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-00a44b22-d821-4aff-a652-3c11079bc146\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00a44b22-d821-4aff-a652-3c11079bc146')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-00a44b22-d821-4aff-a652-3c11079bc146 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 6000,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-03-13 00:00:00\",\n        \"max\": \"2024-07-03 00:00:00\",\n        \"num_unique_values\": 6000,\n        \"samples\": [\n          \"2007-06-05 00:00:00\",\n          \"2016-01-13 00:00:00\",\n          \"2001-02-13 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2dc\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65990,\n        \"min\": 2650,\n        \"max\": 518222,\n        \"num_unique_values\": 2116,\n        \"samples\": [\n          71900,\n          51800,\n          30622\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uace0\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67730,\n        \"min\": 2650,\n        \"max\": 539815,\n        \"num_unique_values\": 2165,\n        \"samples\": [\n          41800,\n          90300,\n          46150\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc800\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64243,\n        \"min\": 2454,\n        \"max\": 500556,\n        \"num_unique_values\": 2140,\n        \"samples\": [\n          67000,\n          61000,\n          46450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc885\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65840,\n        \"min\": 2650,\n        \"max\": 524111,\n        \"num_unique_values\": 2155,\n        \"samples\": [\n          49900,\n          106500,\n          23850\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac70\\ub798\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114211236,\n        \"min\": 0,\n        \"max\": 1832794266,\n        \"num_unique_values\": 5988,\n        \"samples\": [\n          3074526,\n          2542590,\n          2715809\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubcc0\\ub3d9\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03728119102672977,\n        \"min\": -0.1500169812236185,\n        \"max\": 0.1500917057265132,\n        \"num_unique_values\": 4879,\n        \"samples\": [\n          0.03552631578947363,\n          -0.040935672514619936,\n          -0.025574570786023765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['수익률']= df['종가'].pct_change()\n",
        "df['10Days']=df['종가'].rolling(window=10).mean()\n",
        "df['50Days']=df['종가'].rolling(window=50).mean()\n",
        "df.head(50)"
      ],
      "metadata": {
        "id": "9efebZWRE5QG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "1954457f-3e07-4f33-f987-e8d2e00a53c7"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                시가      고가      저가      종가       거래량       변동률       수익률  \\\n",
              "Date                                                                       \n",
              "2000-03-13  398481  402407  366093  371000   7712000       NaN       NaN   \n",
              "2000-03-14  378852  404370  372963  386703   7374010  0.042326  0.042326   \n",
              "2000-03-15  372963  410259  369037  403388   6626500  0.043147  0.043147   \n",
              "2000-03-16  418111  420074  387685  394555   5726020 -0.021897 -0.021897   \n",
              "2000-03-17  406333  417130  402407  408296   5506430  0.034827  0.034827   \n",
              "2000-03-20  431852  442648  424000  435777   8825570  0.067307  0.067307   \n",
              "2000-03-21  437741  449519  426944  445592   8173300  0.022523  0.022523   \n",
              "2000-03-22  449519  477000  445593  471111  12114430  0.057270  0.057270   \n",
              "2000-03-23  480926  499574  451481  451481  12916120 -0.041667 -0.041667   \n",
              "2000-03-24  471111  519204  455407  495648  22081620  0.097827  0.097827   \n",
              "2000-03-27  501537  512333  475037  490740  13710320 -0.009902 -0.009902   \n",
              "2000-03-28  500556  525093  490741  508407  15201990  0.036001  0.036001   \n",
              "2000-03-29  508407  539815  500556  524111  17203170  0.030889  0.030889   \n",
              "2000-03-30  518222  518222  488778  500555  10789400 -0.044945 -0.044945   \n",
              "2000-03-31  481907  510370  481907  482888   7857470 -0.035295 -0.035295   \n",
              "2000-04-03  492704  514296  487796  498592   8441110  0.032521  0.032521   \n",
              "2000-04-04  490741  505463  473074  486814   4812430 -0.023623 -0.023623   \n",
              "2000-04-06  497611  500556  459333  459333   6962300 -0.056451 -0.056451   \n",
              "2000-04-07  467185  484852  467185  479944   6262550  0.044872  0.044872   \n",
              "2000-04-10  482889  495648  474056  483870   6073150  0.008180  0.008180   \n",
              "2000-04-11  477000  477981  464241  471111   3571660 -0.026369 -0.026369   \n",
              "2000-04-12  471111  482889  461296  476018   4119450  0.010416  0.010416   \n",
              "2000-04-14  453444  461296  431852  443629   4816200 -0.068042 -0.068042   \n",
              "2000-04-17  379833  401426  377870  377870   7367770 -0.148230 -0.148230   \n",
              "2000-04-18  429889  432833  400444  426944  10777090  0.129870  0.129870   \n",
              "2000-04-19  446574  460315  423019  437740   6686190  0.025287  0.025287   \n",
              "2000-04-20  431852  444611  425963  431851   3105490 -0.013453 -0.013453   \n",
              "2000-04-21  445593  447556  422037  422037   4409900 -0.022725 -0.022725   \n",
              "2000-04-24  412222  427926  404370  424000   5294570  0.004651  0.004651   \n",
              "2000-04-25  412222  418111  406333  411240   3623120 -0.030094 -0.030094   \n",
              "2000-04-26  422037  426944  350389  350388  30856280 -0.147972 -0.147972   \n",
              "2000-04-27  323889  333704  298370  317018  41861610 -0.095237 -0.095237   \n",
              "2000-04-28  324870  352352  323889  345481  23225070  0.089784  0.089784   \n",
              "2000-05-02  333704  355296  326833  341555  13589220 -0.011364 -0.011364   \n",
              "2000-05-03  339593  355296  332722  341555   9937960  0.000000  0.000000   \n",
              "2000-05-04  345481  357259  337630  343518  10673530  0.005747  0.005747   \n",
              "2000-05-08  351370  361185  344500  350388   8848810  0.019999  0.019999   \n",
              "2000-05-09  350389  352352  340574  342537   3724620 -0.022407 -0.022407   \n",
              "2000-05-10  335667  340574  333704  335666   4205830 -0.020059 -0.020059   \n",
              "2000-05-12  335667  339593  318981  321925   4445530 -0.040937 -0.040937   \n",
              "2000-05-15  333704  350389  325852  328796   9547060  0.021343  0.021343   \n",
              "2000-05-16  331741  344500  329778  343518   6240260  0.044775  0.044775   \n",
              "2000-05-17  353333  362167  338611  345481   8522160  0.005714  0.005714   \n",
              "2000-05-18  331741  342537  328796  335666   4001640 -0.028410 -0.028410   \n",
              "2000-05-19  333704  335667  324870  333703   4356290 -0.005848 -0.005848   \n",
              "2000-05-22  327815  332722  319963  319962   3307010 -0.041177 -0.041177   \n",
              "2000-05-23  306222  322907  306222  315055   3634570 -0.015336 -0.015336   \n",
              "2000-05-24  306222  323889  294444  314074   5498750 -0.003114 -0.003114   \n",
              "2000-05-25  332722  340574  318000  330759  17417710  0.053124  0.053124   \n",
              "2000-05-26  318000  321926  290519  296407   8270800 -0.103858 -0.103858   \n",
              "\n",
              "              10Days     50Days  \n",
              "Date                             \n",
              "2000-03-13       NaN        NaN  \n",
              "2000-03-14       NaN        NaN  \n",
              "2000-03-15       NaN        NaN  \n",
              "2000-03-16       NaN        NaN  \n",
              "2000-03-17       NaN        NaN  \n",
              "2000-03-20       NaN        NaN  \n",
              "2000-03-21       NaN        NaN  \n",
              "2000-03-22       NaN        NaN  \n",
              "2000-03-23       NaN        NaN  \n",
              "2000-03-24  426355.1        NaN  \n",
              "2000-03-27  438329.1        NaN  \n",
              "2000-03-28  450499.5        NaN  \n",
              "2000-03-29  462571.8        NaN  \n",
              "2000-03-30  473171.8        NaN  \n",
              "2000-03-31  480631.0        NaN  \n",
              "2000-04-03  486912.5        NaN  \n",
              "2000-04-04  491034.7        NaN  \n",
              "2000-04-06  489856.9        NaN  \n",
              "2000-04-07  492703.2        NaN  \n",
              "2000-04-10  491525.4        NaN  \n",
              "2000-04-11  489562.5        NaN  \n",
              "2000-04-12  486323.6        NaN  \n",
              "2000-04-14  478275.4        NaN  \n",
              "2000-04-17  466006.9        NaN  \n",
              "2000-04-18  460412.5        NaN  \n",
              "2000-04-19  454327.3        NaN  \n",
              "2000-04-20  448831.0        NaN  \n",
              "2000-04-21  445101.4        NaN  \n",
              "2000-04-24  439507.0        NaN  \n",
              "2000-04-25  432244.0        NaN  \n",
              "2000-04-26  420171.7        NaN  \n",
              "2000-04-27  404271.7        NaN  \n",
              "2000-04-28  394456.9        NaN  \n",
              "2000-05-02  390825.4        NaN  \n",
              "2000-05-03  382286.5        NaN  \n",
              "2000-05-04  372864.3        NaN  \n",
              "2000-05-08  364718.0        NaN  \n",
              "2000-05-09  356768.0        NaN  \n",
              "2000-05-10  347934.6        NaN  \n",
              "2000-05-12  339003.1        NaN  \n",
              "2000-05-15  336843.9        NaN  \n",
              "2000-05-16  339493.9        NaN  \n",
              "2000-05-17  339493.9        NaN  \n",
              "2000-05-18  338905.0        NaN  \n",
              "2000-05-19  338119.8        NaN  \n",
              "2000-05-22  335764.2        NaN  \n",
              "2000-05-23  332230.9        NaN  \n",
              "2000-05-24  329384.6        NaN  \n",
              "2000-05-25  328893.9        NaN  \n",
              "2000-05-26  326342.1  403093.94  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4ac45dff-ae47-464a-ae47-4c0c0c7bfdc1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>시가</th>\n",
              "      <th>고가</th>\n",
              "      <th>저가</th>\n",
              "      <th>종가</th>\n",
              "      <th>거래량</th>\n",
              "      <th>변동률</th>\n",
              "      <th>수익률</th>\n",
              "      <th>10Days</th>\n",
              "      <th>50Days</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2000-03-13</th>\n",
              "      <td>398481</td>\n",
              "      <td>402407</td>\n",
              "      <td>366093</td>\n",
              "      <td>371000</td>\n",
              "      <td>7712000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-14</th>\n",
              "      <td>378852</td>\n",
              "      <td>404370</td>\n",
              "      <td>372963</td>\n",
              "      <td>386703</td>\n",
              "      <td>7374010</td>\n",
              "      <td>0.042326</td>\n",
              "      <td>0.042326</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-15</th>\n",
              "      <td>372963</td>\n",
              "      <td>410259</td>\n",
              "      <td>369037</td>\n",
              "      <td>403388</td>\n",
              "      <td>6626500</td>\n",
              "      <td>0.043147</td>\n",
              "      <td>0.043147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-16</th>\n",
              "      <td>418111</td>\n",
              "      <td>420074</td>\n",
              "      <td>387685</td>\n",
              "      <td>394555</td>\n",
              "      <td>5726020</td>\n",
              "      <td>-0.021897</td>\n",
              "      <td>-0.021897</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-17</th>\n",
              "      <td>406333</td>\n",
              "      <td>417130</td>\n",
              "      <td>402407</td>\n",
              "      <td>408296</td>\n",
              "      <td>5506430</td>\n",
              "      <td>0.034827</td>\n",
              "      <td>0.034827</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-20</th>\n",
              "      <td>431852</td>\n",
              "      <td>442648</td>\n",
              "      <td>424000</td>\n",
              "      <td>435777</td>\n",
              "      <td>8825570</td>\n",
              "      <td>0.067307</td>\n",
              "      <td>0.067307</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-21</th>\n",
              "      <td>437741</td>\n",
              "      <td>449519</td>\n",
              "      <td>426944</td>\n",
              "      <td>445592</td>\n",
              "      <td>8173300</td>\n",
              "      <td>0.022523</td>\n",
              "      <td>0.022523</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-22</th>\n",
              "      <td>449519</td>\n",
              "      <td>477000</td>\n",
              "      <td>445593</td>\n",
              "      <td>471111</td>\n",
              "      <td>12114430</td>\n",
              "      <td>0.057270</td>\n",
              "      <td>0.057270</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-23</th>\n",
              "      <td>480926</td>\n",
              "      <td>499574</td>\n",
              "      <td>451481</td>\n",
              "      <td>451481</td>\n",
              "      <td>12916120</td>\n",
              "      <td>-0.041667</td>\n",
              "      <td>-0.041667</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-24</th>\n",
              "      <td>471111</td>\n",
              "      <td>519204</td>\n",
              "      <td>455407</td>\n",
              "      <td>495648</td>\n",
              "      <td>22081620</td>\n",
              "      <td>0.097827</td>\n",
              "      <td>0.097827</td>\n",
              "      <td>426355.1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-27</th>\n",
              "      <td>501537</td>\n",
              "      <td>512333</td>\n",
              "      <td>475037</td>\n",
              "      <td>490740</td>\n",
              "      <td>13710320</td>\n",
              "      <td>-0.009902</td>\n",
              "      <td>-0.009902</td>\n",
              "      <td>438329.1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-28</th>\n",
              "      <td>500556</td>\n",
              "      <td>525093</td>\n",
              "      <td>490741</td>\n",
              "      <td>508407</td>\n",
              "      <td>15201990</td>\n",
              "      <td>0.036001</td>\n",
              "      <td>0.036001</td>\n",
              "      <td>450499.5</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-29</th>\n",
              "      <td>508407</td>\n",
              "      <td>539815</td>\n",
              "      <td>500556</td>\n",
              "      <td>524111</td>\n",
              "      <td>17203170</td>\n",
              "      <td>0.030889</td>\n",
              "      <td>0.030889</td>\n",
              "      <td>462571.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-30</th>\n",
              "      <td>518222</td>\n",
              "      <td>518222</td>\n",
              "      <td>488778</td>\n",
              "      <td>500555</td>\n",
              "      <td>10789400</td>\n",
              "      <td>-0.044945</td>\n",
              "      <td>-0.044945</td>\n",
              "      <td>473171.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-03-31</th>\n",
              "      <td>481907</td>\n",
              "      <td>510370</td>\n",
              "      <td>481907</td>\n",
              "      <td>482888</td>\n",
              "      <td>7857470</td>\n",
              "      <td>-0.035295</td>\n",
              "      <td>-0.035295</td>\n",
              "      <td>480631.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-03</th>\n",
              "      <td>492704</td>\n",
              "      <td>514296</td>\n",
              "      <td>487796</td>\n",
              "      <td>498592</td>\n",
              "      <td>8441110</td>\n",
              "      <td>0.032521</td>\n",
              "      <td>0.032521</td>\n",
              "      <td>486912.5</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-04</th>\n",
              "      <td>490741</td>\n",
              "      <td>505463</td>\n",
              "      <td>473074</td>\n",
              "      <td>486814</td>\n",
              "      <td>4812430</td>\n",
              "      <td>-0.023623</td>\n",
              "      <td>-0.023623</td>\n",
              "      <td>491034.7</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-06</th>\n",
              "      <td>497611</td>\n",
              "      <td>500556</td>\n",
              "      <td>459333</td>\n",
              "      <td>459333</td>\n",
              "      <td>6962300</td>\n",
              "      <td>-0.056451</td>\n",
              "      <td>-0.056451</td>\n",
              "      <td>489856.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-07</th>\n",
              "      <td>467185</td>\n",
              "      <td>484852</td>\n",
              "      <td>467185</td>\n",
              "      <td>479944</td>\n",
              "      <td>6262550</td>\n",
              "      <td>0.044872</td>\n",
              "      <td>0.044872</td>\n",
              "      <td>492703.2</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-10</th>\n",
              "      <td>482889</td>\n",
              "      <td>495648</td>\n",
              "      <td>474056</td>\n",
              "      <td>483870</td>\n",
              "      <td>6073150</td>\n",
              "      <td>0.008180</td>\n",
              "      <td>0.008180</td>\n",
              "      <td>491525.4</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-11</th>\n",
              "      <td>477000</td>\n",
              "      <td>477981</td>\n",
              "      <td>464241</td>\n",
              "      <td>471111</td>\n",
              "      <td>3571660</td>\n",
              "      <td>-0.026369</td>\n",
              "      <td>-0.026369</td>\n",
              "      <td>489562.5</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-12</th>\n",
              "      <td>471111</td>\n",
              "      <td>482889</td>\n",
              "      <td>461296</td>\n",
              "      <td>476018</td>\n",
              "      <td>4119450</td>\n",
              "      <td>0.010416</td>\n",
              "      <td>0.010416</td>\n",
              "      <td>486323.6</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-14</th>\n",
              "      <td>453444</td>\n",
              "      <td>461296</td>\n",
              "      <td>431852</td>\n",
              "      <td>443629</td>\n",
              "      <td>4816200</td>\n",
              "      <td>-0.068042</td>\n",
              "      <td>-0.068042</td>\n",
              "      <td>478275.4</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-17</th>\n",
              "      <td>379833</td>\n",
              "      <td>401426</td>\n",
              "      <td>377870</td>\n",
              "      <td>377870</td>\n",
              "      <td>7367770</td>\n",
              "      <td>-0.148230</td>\n",
              "      <td>-0.148230</td>\n",
              "      <td>466006.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-18</th>\n",
              "      <td>429889</td>\n",
              "      <td>432833</td>\n",
              "      <td>400444</td>\n",
              "      <td>426944</td>\n",
              "      <td>10777090</td>\n",
              "      <td>0.129870</td>\n",
              "      <td>0.129870</td>\n",
              "      <td>460412.5</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-19</th>\n",
              "      <td>446574</td>\n",
              "      <td>460315</td>\n",
              "      <td>423019</td>\n",
              "      <td>437740</td>\n",
              "      <td>6686190</td>\n",
              "      <td>0.025287</td>\n",
              "      <td>0.025287</td>\n",
              "      <td>454327.3</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-20</th>\n",
              "      <td>431852</td>\n",
              "      <td>444611</td>\n",
              "      <td>425963</td>\n",
              "      <td>431851</td>\n",
              "      <td>3105490</td>\n",
              "      <td>-0.013453</td>\n",
              "      <td>-0.013453</td>\n",
              "      <td>448831.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-21</th>\n",
              "      <td>445593</td>\n",
              "      <td>447556</td>\n",
              "      <td>422037</td>\n",
              "      <td>422037</td>\n",
              "      <td>4409900</td>\n",
              "      <td>-0.022725</td>\n",
              "      <td>-0.022725</td>\n",
              "      <td>445101.4</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-24</th>\n",
              "      <td>412222</td>\n",
              "      <td>427926</td>\n",
              "      <td>404370</td>\n",
              "      <td>424000</td>\n",
              "      <td>5294570</td>\n",
              "      <td>0.004651</td>\n",
              "      <td>0.004651</td>\n",
              "      <td>439507.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-25</th>\n",
              "      <td>412222</td>\n",
              "      <td>418111</td>\n",
              "      <td>406333</td>\n",
              "      <td>411240</td>\n",
              "      <td>3623120</td>\n",
              "      <td>-0.030094</td>\n",
              "      <td>-0.030094</td>\n",
              "      <td>432244.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-26</th>\n",
              "      <td>422037</td>\n",
              "      <td>426944</td>\n",
              "      <td>350389</td>\n",
              "      <td>350388</td>\n",
              "      <td>30856280</td>\n",
              "      <td>-0.147972</td>\n",
              "      <td>-0.147972</td>\n",
              "      <td>420171.7</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-27</th>\n",
              "      <td>323889</td>\n",
              "      <td>333704</td>\n",
              "      <td>298370</td>\n",
              "      <td>317018</td>\n",
              "      <td>41861610</td>\n",
              "      <td>-0.095237</td>\n",
              "      <td>-0.095237</td>\n",
              "      <td>404271.7</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-04-28</th>\n",
              "      <td>324870</td>\n",
              "      <td>352352</td>\n",
              "      <td>323889</td>\n",
              "      <td>345481</td>\n",
              "      <td>23225070</td>\n",
              "      <td>0.089784</td>\n",
              "      <td>0.089784</td>\n",
              "      <td>394456.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-02</th>\n",
              "      <td>333704</td>\n",
              "      <td>355296</td>\n",
              "      <td>326833</td>\n",
              "      <td>341555</td>\n",
              "      <td>13589220</td>\n",
              "      <td>-0.011364</td>\n",
              "      <td>-0.011364</td>\n",
              "      <td>390825.4</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-03</th>\n",
              "      <td>339593</td>\n",
              "      <td>355296</td>\n",
              "      <td>332722</td>\n",
              "      <td>341555</td>\n",
              "      <td>9937960</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>382286.5</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-04</th>\n",
              "      <td>345481</td>\n",
              "      <td>357259</td>\n",
              "      <td>337630</td>\n",
              "      <td>343518</td>\n",
              "      <td>10673530</td>\n",
              "      <td>0.005747</td>\n",
              "      <td>0.005747</td>\n",
              "      <td>372864.3</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-08</th>\n",
              "      <td>351370</td>\n",
              "      <td>361185</td>\n",
              "      <td>344500</td>\n",
              "      <td>350388</td>\n",
              "      <td>8848810</td>\n",
              "      <td>0.019999</td>\n",
              "      <td>0.019999</td>\n",
              "      <td>364718.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-09</th>\n",
              "      <td>350389</td>\n",
              "      <td>352352</td>\n",
              "      <td>340574</td>\n",
              "      <td>342537</td>\n",
              "      <td>3724620</td>\n",
              "      <td>-0.022407</td>\n",
              "      <td>-0.022407</td>\n",
              "      <td>356768.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-10</th>\n",
              "      <td>335667</td>\n",
              "      <td>340574</td>\n",
              "      <td>333704</td>\n",
              "      <td>335666</td>\n",
              "      <td>4205830</td>\n",
              "      <td>-0.020059</td>\n",
              "      <td>-0.020059</td>\n",
              "      <td>347934.6</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-12</th>\n",
              "      <td>335667</td>\n",
              "      <td>339593</td>\n",
              "      <td>318981</td>\n",
              "      <td>321925</td>\n",
              "      <td>4445530</td>\n",
              "      <td>-0.040937</td>\n",
              "      <td>-0.040937</td>\n",
              "      <td>339003.1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-15</th>\n",
              "      <td>333704</td>\n",
              "      <td>350389</td>\n",
              "      <td>325852</td>\n",
              "      <td>328796</td>\n",
              "      <td>9547060</td>\n",
              "      <td>0.021343</td>\n",
              "      <td>0.021343</td>\n",
              "      <td>336843.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-16</th>\n",
              "      <td>331741</td>\n",
              "      <td>344500</td>\n",
              "      <td>329778</td>\n",
              "      <td>343518</td>\n",
              "      <td>6240260</td>\n",
              "      <td>0.044775</td>\n",
              "      <td>0.044775</td>\n",
              "      <td>339493.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-17</th>\n",
              "      <td>353333</td>\n",
              "      <td>362167</td>\n",
              "      <td>338611</td>\n",
              "      <td>345481</td>\n",
              "      <td>8522160</td>\n",
              "      <td>0.005714</td>\n",
              "      <td>0.005714</td>\n",
              "      <td>339493.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-18</th>\n",
              "      <td>331741</td>\n",
              "      <td>342537</td>\n",
              "      <td>328796</td>\n",
              "      <td>335666</td>\n",
              "      <td>4001640</td>\n",
              "      <td>-0.028410</td>\n",
              "      <td>-0.028410</td>\n",
              "      <td>338905.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-19</th>\n",
              "      <td>333704</td>\n",
              "      <td>335667</td>\n",
              "      <td>324870</td>\n",
              "      <td>333703</td>\n",
              "      <td>4356290</td>\n",
              "      <td>-0.005848</td>\n",
              "      <td>-0.005848</td>\n",
              "      <td>338119.8</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-22</th>\n",
              "      <td>327815</td>\n",
              "      <td>332722</td>\n",
              "      <td>319963</td>\n",
              "      <td>319962</td>\n",
              "      <td>3307010</td>\n",
              "      <td>-0.041177</td>\n",
              "      <td>-0.041177</td>\n",
              "      <td>335764.2</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-23</th>\n",
              "      <td>306222</td>\n",
              "      <td>322907</td>\n",
              "      <td>306222</td>\n",
              "      <td>315055</td>\n",
              "      <td>3634570</td>\n",
              "      <td>-0.015336</td>\n",
              "      <td>-0.015336</td>\n",
              "      <td>332230.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-24</th>\n",
              "      <td>306222</td>\n",
              "      <td>323889</td>\n",
              "      <td>294444</td>\n",
              "      <td>314074</td>\n",
              "      <td>5498750</td>\n",
              "      <td>-0.003114</td>\n",
              "      <td>-0.003114</td>\n",
              "      <td>329384.6</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-25</th>\n",
              "      <td>332722</td>\n",
              "      <td>340574</td>\n",
              "      <td>318000</td>\n",
              "      <td>330759</td>\n",
              "      <td>17417710</td>\n",
              "      <td>0.053124</td>\n",
              "      <td>0.053124</td>\n",
              "      <td>328893.9</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-26</th>\n",
              "      <td>318000</td>\n",
              "      <td>321926</td>\n",
              "      <td>290519</td>\n",
              "      <td>296407</td>\n",
              "      <td>8270800</td>\n",
              "      <td>-0.103858</td>\n",
              "      <td>-0.103858</td>\n",
              "      <td>326342.1</td>\n",
              "      <td>403093.94</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4ac45dff-ae47-464a-ae47-4c0c0c7bfdc1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4ac45dff-ae47-464a-ae47-4c0c0c7bfdc1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4ac45dff-ae47-464a-ae47-4c0c0c7bfdc1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1b6eede1-52cd-46c4-a0d0-920f590cfaa0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1b6eede1-52cd-46c4-a0d0-920f590cfaa0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1b6eede1-52cd-46c4-a0d0-920f590cfaa0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 6000,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-03-13 00:00:00\",\n        \"max\": \"2024-07-03 00:00:00\",\n        \"num_unique_values\": 6000,\n        \"samples\": [\n          \"2007-06-05 00:00:00\",\n          \"2016-01-13 00:00:00\",\n          \"2001-02-13 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2dc\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65990,\n        \"min\": 2650,\n        \"max\": 518222,\n        \"num_unique_values\": 2116,\n        \"samples\": [\n          71900,\n          51800,\n          30622\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uace0\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67730,\n        \"min\": 2650,\n        \"max\": 539815,\n        \"num_unique_values\": 2165,\n        \"samples\": [\n          41800,\n          90300,\n          46150\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc800\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64243,\n        \"min\": 2454,\n        \"max\": 500556,\n        \"num_unique_values\": 2140,\n        \"samples\": [\n          67000,\n          61000,\n          46450\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc885\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 65840,\n        \"min\": 2650,\n        \"max\": 524111,\n        \"num_unique_values\": 2155,\n        \"samples\": [\n          49900,\n          106500,\n          23850\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac70\\ub798\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114211236,\n        \"min\": 0,\n        \"max\": 1832794266,\n        \"num_unique_values\": 5988,\n        \"samples\": [\n          3074526,\n          2542590,\n          2715809\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubcc0\\ub3d9\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03728119102672977,\n        \"min\": -0.1500169812236185,\n        \"max\": 0.1500917057265132,\n        \"num_unique_values\": 4879,\n        \"samples\": [\n          0.03552631578947363,\n          -0.040935672514619936,\n          -0.025574570786023765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\uc775\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03728119102672977,\n        \"min\": -0.1500169812236185,\n        \"max\": 0.1500917057265132,\n        \"num_unique_values\": 4879,\n        \"samples\": [\n          0.03552631578947363,\n          -0.040935672514619936,\n          -0.025574570786023765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64842.028886344924,\n        \"min\": 2650.0,\n        \"max\": 492703.2,\n        \"num_unique_values\": 4998,\n        \"samples\": [\n          368447.6,\n          33015.0,\n          30730.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59674.46494575982,\n        \"min\": 3302.56,\n        \"max\": 420053.9,\n        \"num_unique_values\": 5707,\n        \"samples\": [\n          20265.0,\n          12128.0,\n          29604.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=df.dropna()\n",
        "df.head()\n"
      ],
      "metadata": {
        "id": "Wpwl_9bRE5Sr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "outputId": "8e1e0d73-d026-409c-dc35-c7ccdc4aa8e6"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                시가      고가      저가      종가       거래량       변동률       수익률  \\\n",
              "Date                                                                       \n",
              "2000-05-26  318000  321926  290519  296407   8270800 -0.103858 -0.103858   \n",
              "2000-05-29  258130  290519  252241  271870  14840410 -0.082781 -0.082781   \n",
              "2000-05-30  293463  312111  282667  312111  11645850  0.148016  0.148016   \n",
              "2000-05-31  331741  358241  324870  345481  17598730  0.106917  0.106917   \n",
              "2000-06-01  345481  369037  333704  353333  11873320  0.022728  0.022728   \n",
              "\n",
              "              10Days     50Days  \n",
              "Date                             \n",
              "2000-05-26  326342.1  403093.94  \n",
              "2000-05-29  320649.5  401111.34  \n",
              "2000-05-30  317508.8  399619.50  \n",
              "2000-05-31  317508.8  398461.36  \n",
              "2000-06-01  319275.5  397636.92  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-37c52519-f571-48ad-8d49-ca74b4f9b756\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>시가</th>\n",
              "      <th>고가</th>\n",
              "      <th>저가</th>\n",
              "      <th>종가</th>\n",
              "      <th>거래량</th>\n",
              "      <th>변동률</th>\n",
              "      <th>수익률</th>\n",
              "      <th>10Days</th>\n",
              "      <th>50Days</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2000-05-26</th>\n",
              "      <td>318000</td>\n",
              "      <td>321926</td>\n",
              "      <td>290519</td>\n",
              "      <td>296407</td>\n",
              "      <td>8270800</td>\n",
              "      <td>-0.103858</td>\n",
              "      <td>-0.103858</td>\n",
              "      <td>326342.1</td>\n",
              "      <td>403093.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-29</th>\n",
              "      <td>258130</td>\n",
              "      <td>290519</td>\n",
              "      <td>252241</td>\n",
              "      <td>271870</td>\n",
              "      <td>14840410</td>\n",
              "      <td>-0.082781</td>\n",
              "      <td>-0.082781</td>\n",
              "      <td>320649.5</td>\n",
              "      <td>401111.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-30</th>\n",
              "      <td>293463</td>\n",
              "      <td>312111</td>\n",
              "      <td>282667</td>\n",
              "      <td>312111</td>\n",
              "      <td>11645850</td>\n",
              "      <td>0.148016</td>\n",
              "      <td>0.148016</td>\n",
              "      <td>317508.8</td>\n",
              "      <td>399619.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-05-31</th>\n",
              "      <td>331741</td>\n",
              "      <td>358241</td>\n",
              "      <td>324870</td>\n",
              "      <td>345481</td>\n",
              "      <td>17598730</td>\n",
              "      <td>0.106917</td>\n",
              "      <td>0.106917</td>\n",
              "      <td>317508.8</td>\n",
              "      <td>398461.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-06-01</th>\n",
              "      <td>345481</td>\n",
              "      <td>369037</td>\n",
              "      <td>333704</td>\n",
              "      <td>353333</td>\n",
              "      <td>11873320</td>\n",
              "      <td>0.022728</td>\n",
              "      <td>0.022728</td>\n",
              "      <td>319275.5</td>\n",
              "      <td>397636.92</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37c52519-f571-48ad-8d49-ca74b4f9b756')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-37c52519-f571-48ad-8d49-ca74b4f9b756 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-37c52519-f571-48ad-8d49-ca74b4f9b756');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-39dc65a8-ced1-415b-9d98-35b08005e942\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-39dc65a8-ced1-415b-9d98-35b08005e942')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-39dc65a8-ced1-415b-9d98-35b08005e942 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5951,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-05-26 00:00:00\",\n        \"max\": \"2024-07-03 00:00:00\",\n        \"num_unique_values\": 5951,\n        \"samples\": [\n          \"2016-09-26 00:00:00\",\n          \"2017-07-27 00:00:00\",\n          \"2008-05-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc2dc\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57812,\n        \"min\": 2650,\n        \"max\": 488778,\n        \"num_unique_values\": 2091,\n        \"samples\": [\n          121400,\n          400444,\n          54178\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uace0\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59169,\n        \"min\": 2650,\n        \"max\": 494667,\n        \"num_unique_values\": 2130,\n        \"samples\": [\n          20415,\n          134200,\n          65300\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc800\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56437,\n        \"min\": 2454,\n        \"max\": 477000,\n        \"num_unique_values\": 2107,\n        \"samples\": [\n          13000,\n          82600,\n          31898\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc885\\uac00\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57748,\n        \"min\": 2650,\n        \"max\": 480925,\n        \"num_unique_values\": 2125,\n        \"samples\": [\n          17175,\n          125800,\n          74800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac70\\ub798\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114662703,\n        \"min\": 0,\n        \"max\": 1832794266,\n        \"num_unique_values\": 5939,\n        \"samples\": [\n          2912611,\n          5111929,\n          10471186\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ubcc0\\ub3d9\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.037128437957479755,\n        \"min\": -0.1500169812236185,\n        \"max\": 0.1500917057265132,\n        \"num_unique_values\": 4833,\n        \"samples\": [\n          -0.04280155642023342,\n          0.006036217303822866,\n          0.033816425120772875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\uc775\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.037128437957479755,\n        \"min\": -0.1500169812236185,\n        \"max\": 0.1500917057265132,\n        \"num_unique_values\": 4833,\n        \"samples\": [\n          -0.04280155642023342,\n          0.006036217303822866,\n          0.033816425120772875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57860.14006024109,\n        \"min\": 2650.0,\n        \"max\": 465614.3,\n        \"num_unique_values\": 4959,\n        \"samples\": [\n          46025.0,\n          23490.0,\n          24340.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 59674.46494575982,\n        \"min\": 3302.56,\n        \"max\": 420053.9,\n        \"num_unique_values\": 5707,\n        \"samples\": [\n          20265.0,\n          12128.0,\n          29604.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "df['target']= np.where(df['수익률'].shift(-1)<0,1,0)\n"
      ],
      "metadata": {
        "id": "Hw8lLUg0E5VS"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split #import sklearn을 쓰기에는 너무 커서 지정\n",
        "X_train,X_test,y_train,y_test=train_test_split(\n",
        "    df[['수익률','10Days','50Days']],df['target'],test_size=0.2,random_state=42) #random_state: 데이터 치우침을 막기위해 데이터를 섞는다.대부분 42사용"
      ],
      "metadata": {
        "id": "fe10C0LxE5YT"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "lr =LogisticRegression() #LogisticRegression"
      ],
      "metadata": {
        "id": "swXCfZ4AVGRx"
      },
      "execution_count": 58,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "print(y_train.shape,X_train.shape)"
      ],
      "metadata": {
        "id": "L3TXfuO_R9Rj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "Hzzy-KVjE69i"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lr.fit(X_train,y_train)"
      ],
      "metadata": {
        "id": "h_sytlyGE7FB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "outputId": "a001ec0c-ee1b-44af-99f6-f7569cb66c7e"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LogisticRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lr.predict(X_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rLzKwsuJVJum",
        "outputId": "80fcdeed-a59a-4811-8405-e18af020006d"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, ..., 0, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "cmKXXV3rVJxo",
        "outputId": "d8f8a524-19de-4b16-f9a0-db7f6613c56c"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 수익률    10Days     50Days\n",
              "Date                                     \n",
              "2016-09-26  0.003812   38830.0   35378.00\n",
              "2017-07-27  0.023952   70520.0   63540.00\n",
              "2008-05-21  0.005025   29665.0   27355.00\n",
              "2019-09-09  0.029304   78080.0   75298.00\n",
              "2005-12-22  0.061290   28815.0   23611.00\n",
              "...              ...       ...        ...\n",
              "2004-04-06  0.095618   11915.0    9824.60\n",
              "2019-07-22  0.020833   74970.0   69326.00\n",
              "2009-07-14  0.038732   14865.0   13726.00\n",
              "2000-06-14  0.079710  396027.3  388725.06\n",
              "2004-12-13  0.004831   10470.0   12031.00\n",
              "\n",
              "[1191 rows x 3 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-625d5ed8-530c-48a6-aac5-e03c5ad4adfd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>수익률</th>\n",
              "      <th>10Days</th>\n",
              "      <th>50Days</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016-09-26</th>\n",
              "      <td>0.003812</td>\n",
              "      <td>38830.0</td>\n",
              "      <td>35378.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-27</th>\n",
              "      <td>0.023952</td>\n",
              "      <td>70520.0</td>\n",
              "      <td>63540.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2008-05-21</th>\n",
              "      <td>0.005025</td>\n",
              "      <td>29665.0</td>\n",
              "      <td>27355.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-09-09</th>\n",
              "      <td>0.029304</td>\n",
              "      <td>78080.0</td>\n",
              "      <td>75298.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2005-12-22</th>\n",
              "      <td>0.061290</td>\n",
              "      <td>28815.0</td>\n",
              "      <td>23611.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2004-04-06</th>\n",
              "      <td>0.095618</td>\n",
              "      <td>11915.0</td>\n",
              "      <td>9824.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-07-22</th>\n",
              "      <td>0.020833</td>\n",
              "      <td>74970.0</td>\n",
              "      <td>69326.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2009-07-14</th>\n",
              "      <td>0.038732</td>\n",
              "      <td>14865.0</td>\n",
              "      <td>13726.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-06-14</th>\n",
              "      <td>0.079710</td>\n",
              "      <td>396027.3</td>\n",
              "      <td>388725.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2004-12-13</th>\n",
              "      <td>0.004831</td>\n",
              "      <td>10470.0</td>\n",
              "      <td>12031.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1191 rows × 3 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-625d5ed8-530c-48a6-aac5-e03c5ad4adfd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-625d5ed8-530c-48a6-aac5-e03c5ad4adfd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-625d5ed8-530c-48a6-aac5-e03c5ad4adfd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1c371c9a-5af6-49c3-84a2-0bc6b52a503a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c371c9a-5af6-49c3-84a2-0bc6b52a503a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1c371c9a-5af6-49c3-84a2-0bc6b52a503a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a8272c7d-4454-44bb-9b0e-60fc254f1c61\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a8272c7d-4454-44bb-9b0e-60fc254f1c61 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('X_test');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_test",
              "summary": "{\n  \"name\": \"X_test\",\n  \"rows\": 1191,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-06-08 00:00:00\",\n        \"max\": \"2024-07-02 00:00:00\",\n        \"num_unique_values\": 1191,\n        \"samples\": [\n          \"2019-02-26 00:00:00\",\n          \"2015-09-08 00:00:00\",\n          \"2011-02-17 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\uc775\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.036000257538108524,\n        \"min\": -0.14980009457890886,\n        \"max\": 0.14994002903857084,\n        \"num_unique_values\": 1118,\n        \"samples\": [\n          -0.03527336860670194,\n          0.0008591065292096189,\n          0.011990407673860837\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61205.48929353177,\n        \"min\": 2650.0,\n        \"max\": 460903.1,\n        \"num_unique_values\": 1145,\n        \"samples\": [\n          8538.6,\n          48175.0,\n          21810.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62911.56812255921,\n        \"min\": 3303.7,\n        \"max\": 420053.9,\n        \"num_unique_values\": 1179,\n        \"samples\": [\n          47157.0,\n          32270.0,\n          129658.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_test['pred']=lr.predict(X_test)\n",
        "X_test['Actual']=y_test\n"
      ],
      "metadata": {
        "id": "4yDNLmlxVJ0x"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "CYXUg_bKVJ3V",
        "outputId": "776fb6ee-0d64-40c7-e9aa-be4eb5ea3a37"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 수익률    10Days     50Days  pred  Actual\n",
              "Date                                                   \n",
              "2016-09-26  0.003812   38830.0   35378.00     0       0\n",
              "2017-07-27  0.023952   70520.0   63540.00     0       1\n",
              "2008-05-21  0.005025   29665.0   27355.00     0       1\n",
              "2019-09-09  0.029304   78080.0   75298.00     0       1\n",
              "2005-12-22  0.061290   28815.0   23611.00     0       0\n",
              "...              ...       ...        ...   ...     ...\n",
              "2004-04-06  0.095618   11915.0    9824.60     0       0\n",
              "2019-07-22  0.020833   74970.0   69326.00     0       0\n",
              "2009-07-14  0.038732   14865.0   13726.00     0       0\n",
              "2000-06-14  0.079710  396027.3  388725.06     0       1\n",
              "2004-12-13  0.004831   10470.0   12031.00     0       0\n",
              "\n",
              "[1191 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7967ecf1-be42-4785-a3e2-9847cd2db3b2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>수익률</th>\n",
              "      <th>10Days</th>\n",
              "      <th>50Days</th>\n",
              "      <th>pred</th>\n",
              "      <th>Actual</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2016-09-26</th>\n",
              "      <td>0.003812</td>\n",
              "      <td>38830.0</td>\n",
              "      <td>35378.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-27</th>\n",
              "      <td>0.023952</td>\n",
              "      <td>70520.0</td>\n",
              "      <td>63540.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2008-05-21</th>\n",
              "      <td>0.005025</td>\n",
              "      <td>29665.0</td>\n",
              "      <td>27355.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-09-09</th>\n",
              "      <td>0.029304</td>\n",
              "      <td>78080.0</td>\n",
              "      <td>75298.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2005-12-22</th>\n",
              "      <td>0.061290</td>\n",
              "      <td>28815.0</td>\n",
              "      <td>23611.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2004-04-06</th>\n",
              "      <td>0.095618</td>\n",
              "      <td>11915.0</td>\n",
              "      <td>9824.60</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-07-22</th>\n",
              "      <td>0.020833</td>\n",
              "      <td>74970.0</td>\n",
              "      <td>69326.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2009-07-14</th>\n",
              "      <td>0.038732</td>\n",
              "      <td>14865.0</td>\n",
              "      <td>13726.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2000-06-14</th>\n",
              "      <td>0.079710</td>\n",
              "      <td>396027.3</td>\n",
              "      <td>388725.06</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2004-12-13</th>\n",
              "      <td>0.004831</td>\n",
              "      <td>10470.0</td>\n",
              "      <td>12031.00</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1191 rows × 5 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7967ecf1-be42-4785-a3e2-9847cd2db3b2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7967ecf1-be42-4785-a3e2-9847cd2db3b2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7967ecf1-be42-4785-a3e2-9847cd2db3b2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4d2f3f33-f9aa-40a6-84d7-6a44fc3753ff\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d2f3f33-f9aa-40a6-84d7-6a44fc3753ff')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4d2f3f33-f9aa-40a6-84d7-6a44fc3753ff button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_5f4febab-a52a-4de1-9888-6801a6938449\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_5f4febab-a52a-4de1-9888-6801a6938449 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('X_test');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "X_test",
              "summary": "{\n  \"name\": \"X_test\",\n  \"rows\": 1191,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2000-06-08 00:00:00\",\n        \"max\": \"2024-07-02 00:00:00\",\n        \"num_unique_values\": 1191,\n        \"samples\": [\n          \"2019-02-26 00:00:00\",\n          \"2015-09-08 00:00:00\",\n          \"2011-02-17 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc218\\uc775\\ub960\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.036000257538108524,\n        \"min\": -0.14980009457890886,\n        \"max\": 0.14994002903857084,\n        \"num_unique_values\": 1118,\n        \"samples\": [\n          -0.03527336860670194,\n          0.0008591065292096189,\n          0.011990407673860837\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 61205.48929353177,\n        \"min\": 2650.0,\n        \"max\": 460903.1,\n        \"num_unique_values\": 1145,\n        \"samples\": [\n          8538.6,\n          48175.0,\n          21810.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50Days\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62911.56812255921,\n        \"min\": 3303.7,\n        \"max\": 420053.9,\n        \"num_unique_values\": 1179,\n        \"samples\": [\n          47157.0,\n          32270.0,\n          129658.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actual\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lr.score(X_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DSnXpbcqVVlL",
        "outputId": "e5672419-af8e-4352-f796-00dc5ac71fdd"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5218487394957984"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lr.score(X_test[['수익률','10Days','50Days']],y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TygQ60roVVny",
        "outputId": "e2cc9d23-4d4e-4bf2-c43a-7ceed42a21d7"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.5239294710327456"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    }
  ]
}